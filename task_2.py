# Треугольник существует только тогда, когда сумма любых двух его сторон больше третьей. Дано a, b, c —
# стороны предполагаемого треугольника. Требуется сравнить длину каждого отрезка-стороны с суммой
# двух других. Если хотя бы в одном случае отрезок окажется больше суммы двух других, то треугольника
# с такими сторонами не существует. Отдельно сообщить является ли треугольник разносторонним,
# равнобедренным или равносторонним.


class Triangle:
    _side1 = 0
    _side2 = 0
    _side3 = 0

    def __init__(self, a, b, c):
        if a >= (b + c) or b >= (a + c) or c >= (a + b):
            print('так не бывает!!!')
            raise ValueError
        self._side1 = a
        self._side2 = b
        self._side3 = c

    def kind_of(self):
        if (self._side1 == self._side2) or (self._side2 == self._side3) or (self._side1 == self._side3):
            if (self._side1 == self._side2 == self._side3):
                return 'Треугольник равносторонний'
            else:
                return 'Треугольник равнобедренный'
        else:
            return 'Треугольник разносторонний'


t1 = Triangle(3, 3, 5)
print(t1.kind_of())
t2 = Triangle(5, 5, 5)
print(t2.kind_of())
t3 = Triangle(2, 2, 6)
print(t3.kind_of())

# _________________ВЫВОД_______________
# Треугольник равнобедренный
# Треугольник равносторонний
# так не бывает!!!
